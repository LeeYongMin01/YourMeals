<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="UserDao">
  
  <resultMap type="user" id="UserMap">
    <id column="uno"           property="userNo"/>
    <result column="utype"  property="userTypeNo"/>
    <result column="point"  property="point"/>
    <result column="name"  property="name"/>
    <result column="nick"  property="nick"/>
    <result column="email"  property="email"/>
    <result column="password"  property="password"/>
    <result column="postno"  property="postNo"/>
    <result column="addr"  property="address"/>
    <result column="det_addr"  property="detailAddress"/>
    <result column="photo"  property="photo"/>
 
  </resultMap>

  <select id="findAll" resultMap="UserMap" parameterType="string">
    select 
      uno,
      utype, 
      point, 
      name,
      nick, 
      email,
      password,
      postno,
      addr,
      det_addr,
      photo
    from 
      oi_user
    order by
      uno desc
  </select>

  
  <select id = "findByNo" resultMap ="UserMap" parameterType="int">
    select
      name,
      nick,
      email,
      password,
      postno,
      addr,
      det_addr,
    from
      oi_user
  </select>
  
  <update id="update" parameterType="user">
    update oi_user 
    <set>
      nick = #{nick},
      password = password(#{password}),
      postno = #{postno},
      addr = #{addr},
      det_addr = #{det_addr},
      photo = #{photo}
    </set>
    where no = #{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from oi_user
    where no = #{no}
  </delete>
  
  <select id="findByEmailPassword" parameterType="map" resultMap="UserMap">
    select
      uno,
      name,
      nick,
      email,
      point,
      postno,
      addr,
      det_addr,
      photo,
      utype
    from
      oi_user
    where
      email = #{email}
      and password = password(#{password})
      
  </select>

</mapper>






